/* à ajouter pour les fonts que le robot ne connait pas et qu'il ira chercher par le lien */
@import url("https://fonts.googleapis.com/css2?family=Oswald:wght@200..7*00&display=swap");

/* font téléchargée et ajoutée dans le projet en cours */
@font-face {
    font-family: dancing_script;
    src: url("./assets/Font/Dancing_Script/DancingScript-VariableFont_wght.ttf");
}
body {
    font-family: dancing_script;
    background: url(../../ressources/imagecode.jpg) center/cover;
    min-height: 100vh;
    /* vieuwport heigh VH=100 de la taille d'écran de l'utilisateur */
}
h1 {
    text-transform: uppercase;
    letter-spacing: 3px;
    text-align: center;
    /* les tailles de police doivent être en REM. 1rem=16px */
    font-size: 2.5rem;
    /* on peut ajouter les valeurs dans la console pour voir les changements et ensuite copier/coller le résultat qui nous plaît */
    text-shadow: 8px 3px 6px rgba(0, 0, 0, 0.25);
    color: rgb(255, 255, 255);
    font-family: oswald;
}
main {
    /* il faut éviter de forcer un heigth avec une valeur fixe mais on peut ajouter une valeur minimum */
    min-height: 500px;
    width: 80%;
    background: rgba(228, 80, 80, 0.5);
    /* pour centrer une boîte */
    /* la marge peut avoir 4,3 ou 2 valeurs: 4= h,d,b,g 3=hb,g,d 2= hb,dg */
    margin: 0 auto;
    border: 2px solid rgb(243, 104, 104);
    border-radius: 20px 20px 20px 20px;
    /* box shadow apporte un coté néo au contour */
    box-shadow: 0px 0px 20px 4px rgb(224, 127, 127);
    padding: 15px;
}
h2 {
    margin: 0;
}
/* on peut ajouter une classe pour avoir les mêmes propriétés en ajoutant une virgule */
.flexbox,
.grid,
.absolute {
    border: 2px solid rgb(243, 104, 104);
    border-radius: 10px;
    padding: 10px;
    margin-top: 20px;
    min-height: 150px;
}
/* flexbox sert à répartir équitablement des éléments (boites) dans un conteneur (une première boite) */
.flexbox ul {
    padding: 0;
    /* le display flex permet d'aligner tous les éléments sur la même ligne */
    display: flex;
    justify-content: space-around;
}
.flexbox li {
    list-style: none;
    height: 160px;
    width: 160px;
    margin: 10px;
    background: blanchedalmond;
    /* centrer un seul élément verticalement et horizontalement dans une boite */
    display: flex;
    justify-content: center;
    align-items: center;
}
/* Le grid met les éléments les uns sous les autres de façon équitable */
.grid-container {
    display: grid;
    grid-template-columns: 30% 70%;
}
.grid img {
    width: 80%;
}
form {
    /* permet d'avoir une grille avec les éléments alignés les uns sous les autres  */
    display: grid;
    /* permet de mettre deux colonnes de fraction en fraction */
    grid-template-columns: 1fr 1fr;
    /* pour avoir le nombre de ligne que l'on souhaite il faut ajouter le grid-templete-rows en mettant autant de valeurs que de lignes souhaitées */
    grid-template-rows: 1fr 1fr 1fr;
    /* ici nous indiquons (ou dessinons) les zones où l'on veut que nos éléments soient placés */
    grid-template-areas:
        "i1 i2"
        "ta ta"
        "vi bt";
}
input,
textarea {
    margin: 5px;
    border: 1px solid rgb(61, 173, 248);
    padding: 10px;
    font-size: 1.1rem;
    font-family: dancing_script;
    border-radius: 20px;
}
textarea {
    grid-area: ta;
    height: 40px;
    /* pour empêcher de redimensionner la zone de texte */
    resize: none;
}
#btn-submit {
    grid-area: bt;
    /*pour montrer à l'utilisateur que le bouton est cliquable */
    cursor: pointer;
    background: rgb(61, 173, 248);
    transition: 0.3s;
    border: none;
}
/* hover sert à ajouter un effet sur le bouton( ou d'autres boîtes) lorsqu'on passe la souris dessus */
#btn-submit:hover {
    background: rgb(6, 54, 86);
    color: white;
}

/* ABSOLUTE */
.absolute {
    /* la position relatrive de la boite absolute (parent) est indispensable pour que l'élément souhaité soit positionné à l'interieur (du parent). Sans cette position relative l'élément en absolute que l'on souhaite positionner le sera en fonction du body. */
    position: relative;
}
#circle1 {
    height: 80px;
    width: 80px;
    background: rgb(61, 173, 248);
    position: absolute;
    border-radius: 150px;
    top: -20px;
    right: -20px;
}
#circle2 {
    height: 40px;
    width: 40px;
    background: blue;
    position: absolute;
    border-radius: 150px;
    /* ici l'élément sera centré en fonction de son bord gauche */
    left: 50%;
    /* pour le centrer en son coeur il faut faire un transform translatex( (x=horizontalement y=verticalement) (de sa propre taille) */
    transform: translatex(-50%);
    top: 100px;
}
